"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_monaco-editor_esm_vs_basic-languages_clojure_clojure_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.js":
/*!******************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": () => (/* binding */ conf),\n/* harmony export */   \"language\": () => (/* binding */ language)\n/* harmony export */ });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar conf = {\r\n    comments: {\r\n        lineComment: ';;'\r\n    },\r\n    brackets: [\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n        ['{', '}']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '(', close: ')' },\r\n        { open: '{', close: '}' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '(', close: ')' },\r\n        { open: '{', close: '}' }\r\n    ]\r\n};\r\nvar language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.clj',\r\n    brackets: [\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '{', close: '}', token: 'delimiter.curly' }\r\n    ],\r\n    constants: ['true', 'false', 'nil'],\r\n    // delimiters: /[\\\\\\[\\]\\s\"#'(),;@^`{}~]|$/,\r\n    numbers: /^(?:[+\\-]?\\d+(?:(?:N|(?:[eE][+\\-]?\\d+))|(?:\\.?\\d*(?:M|(?:[eE][+\\-]?\\d+))?)|\\/\\d+|[xX][0-9a-fA-F]+|r[0-9a-zA-Z]+)?(?=[\\\\\\[\\]\\s\"#'(),;@^`{}~]|$))/,\r\n    characters: /^(?:\\\\(?:backspace|formfeed|newline|return|space|tab|o[0-7]{3}|u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]{4}|.)?(?=[\\\\\\[\\]\\s\"(),;@^`{}~]|$))/,\r\n    escapes: /^\\\\(?:[\"'\\\\bfnrt]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // simple-namespace := /^[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*/\r\n    // simple-symbol    := /^(?:\\/|[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)/\r\n    // qualified-symbol := (<simple-namespace>(<.><simple-namespace>)*</>)?<simple-symbol>\r\n    qualifiedSymbols: /^(?:(?:[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*(?:\\.[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)*\\/)?(?:\\/|[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)*(?=[\\\\\\[\\]\\s\"(),;@^`{}~]|$))/,\r\n    specialForms: [\r\n        '.',\r\n        'catch',\r\n        'def',\r\n        'do',\r\n        'if',\r\n        'monitor-enter',\r\n        'monitor-exit',\r\n        'new',\r\n        'quote',\r\n        'recur',\r\n        'set!',\r\n        'throw',\r\n        'try',\r\n        'var'\r\n    ],\r\n    coreSymbols: [\r\n        '*',\r\n        \"*'\",\r\n        '*1',\r\n        '*2',\r\n        '*3',\r\n        '*agent*',\r\n        '*allow-unresolved-vars*',\r\n        '*assert*',\r\n        '*clojure-version*',\r\n        '*command-line-args*',\r\n        '*compile-files*',\r\n        '*compile-path*',\r\n        '*compiler-options*',\r\n        '*data-readers*',\r\n        '*default-data-reader-fn*',\r\n        '*e',\r\n        '*err*',\r\n        '*file*',\r\n        '*flush-on-newline*',\r\n        '*fn-loader*',\r\n        '*in*',\r\n        '*math-context*',\r\n        '*ns*',\r\n        '*out*',\r\n        '*print-dup*',\r\n        '*print-length*',\r\n        '*print-level*',\r\n        '*print-meta*',\r\n        '*print-namespace-maps*',\r\n        '*print-readably*',\r\n        '*read-eval*',\r\n        '*reader-resolver*',\r\n        '*source-path*',\r\n        '*suppress-read*',\r\n        '*unchecked-math*',\r\n        '*use-context-classloader*',\r\n        '*verbose-defrecords*',\r\n        '*warn-on-reflection*',\r\n        '+',\r\n        \"+'\",\r\n        '-',\r\n        \"-'\",\r\n        '->',\r\n        '->>',\r\n        '->ArrayChunk',\r\n        '->Eduction',\r\n        '->Vec',\r\n        '->VecNode',\r\n        '->VecSeq',\r\n        '-cache-protocol-fn',\r\n        '-reset-methods',\r\n        '..',\r\n        '/',\r\n        '<',\r\n        '<=',\r\n        '=',\r\n        '==',\r\n        '>',\r\n        '>=',\r\n        'EMPTY-NODE',\r\n        'Inst',\r\n        'StackTraceElement->vec',\r\n        'Throwable->map',\r\n        'accessor',\r\n        'aclone',\r\n        'add-classpath',\r\n        'add-watch',\r\n        'agent',\r\n        'agent-error',\r\n        'agent-errors',\r\n        'aget',\r\n        'alength',\r\n        'alias',\r\n        'all-ns',\r\n        'alter',\r\n        'alter-meta!',\r\n        'alter-var-root',\r\n        'amap',\r\n        'ancestors',\r\n        'and',\r\n        'any?',\r\n        'apply',\r\n        'areduce',\r\n        'array-map',\r\n        'as->',\r\n        'aset',\r\n        'aset-boolean',\r\n        'aset-byte',\r\n        'aset-char',\r\n        'aset-double',\r\n        'aset-float',\r\n        'aset-int',\r\n        'aset-long',\r\n        'aset-short',\r\n        'assert',\r\n        'assoc',\r\n        'assoc!',\r\n        'assoc-in',\r\n        'associative?',\r\n        'atom',\r\n        'await',\r\n        'await-for',\r\n        'await1',\r\n        'bases',\r\n        'bean',\r\n        'bigdec',\r\n        'bigint',\r\n        'biginteger',\r\n        'binding',\r\n        'bit-and',\r\n        'bit-and-not',\r\n        'bit-clear',\r\n        'bit-flip',\r\n        'bit-not',\r\n        'bit-or',\r\n        'bit-set',\r\n        'bit-shift-left',\r\n        'bit-shift-right',\r\n        'bit-test',\r\n        'bit-xor',\r\n        'boolean',\r\n        'boolean-array',\r\n        'boolean?',\r\n        'booleans',\r\n        'bound-fn',\r\n        'bound-fn*',\r\n        'bound?',\r\n        'bounded-count',\r\n        'butlast',\r\n        'byte',\r\n        'byte-array',\r\n        'bytes',\r\n        'bytes?',\r\n        'case',\r\n        'cast',\r\n        'cat',\r\n        'char',\r\n        'char-array',\r\n        'char-escape-string',\r\n        'char-name-string',\r\n        'char?',\r\n        'chars',\r\n        'chunk',\r\n        'chunk-append',\r\n        'chunk-buffer',\r\n        'chunk-cons',\r\n        'chunk-first',\r\n        'chunk-next',\r\n        'chunk-rest',\r\n        'chunked-seq?',\r\n        'class',\r\n        'class?',\r\n        'clear-agent-errors',\r\n        'clojure-version',\r\n        'coll?',\r\n        'comment',\r\n        'commute',\r\n        'comp',\r\n        'comparator',\r\n        'compare',\r\n        'compare-and-set!',\r\n        'compile',\r\n        'complement',\r\n        'completing',\r\n        'concat',\r\n        'cond',\r\n        'cond->',\r\n        'cond->>',\r\n        'condp',\r\n        'conj',\r\n        'conj!',\r\n        'cons',\r\n        'constantly',\r\n        'construct-proxy',\r\n        'contains?',\r\n        'count',\r\n        'counted?',\r\n        'create-ns',\r\n        'create-struct',\r\n        'cycle',\r\n        'dec',\r\n        \"dec'\",\r\n        'decimal?',\r\n        'declare',\r\n        'dedupe',\r\n        'default-data-readers',\r\n        'definline',\r\n        'definterface',\r\n        'defmacro',\r\n        'defmethod',\r\n        'defmulti',\r\n        'defn',\r\n        'defn-',\r\n        'defonce',\r\n        'defprotocol',\r\n        'defrecord',\r\n        'defstruct',\r\n        'deftype',\r\n        'delay',\r\n        'delay?',\r\n        'deliver',\r\n        'denominator',\r\n        'deref',\r\n        'derive',\r\n        'descendants',\r\n        'destructure',\r\n        'disj',\r\n        'disj!',\r\n        'dissoc',\r\n        'dissoc!',\r\n        'distinct',\r\n        'distinct?',\r\n        'doall',\r\n        'dorun',\r\n        'doseq',\r\n        'dosync',\r\n        'dotimes',\r\n        'doto',\r\n        'double',\r\n        'double-array',\r\n        'double?',\r\n        'doubles',\r\n        'drop',\r\n        'drop-last',\r\n        'drop-while',\r\n        'eduction',\r\n        'empty',\r\n        'empty?',\r\n        'ensure',\r\n        'ensure-reduced',\r\n        'enumeration-seq',\r\n        'error-handler',\r\n        'error-mode',\r\n        'eval',\r\n        'even?',\r\n        'every-pred',\r\n        'every?',\r\n        'ex-data',\r\n        'ex-info',\r\n        'extend',\r\n        'extend-protocol',\r\n        'extend-type',\r\n        'extenders',\r\n        'extends?',\r\n        'false?',\r\n        'ffirst',\r\n        'file-seq',\r\n        'filter',\r\n        'filterv',\r\n        'find',\r\n        'find-keyword',\r\n        'find-ns',\r\n        'find-protocol-impl',\r\n        'find-protocol-method',\r\n        'find-var',\r\n        'first',\r\n        'flatten',\r\n        'float',\r\n        'float-array',\r\n        'float?',\r\n        'floats',\r\n        'flush',\r\n        'fn',\r\n        'fn?',\r\n        'fnext',\r\n        'fnil',\r\n        'for',\r\n        'force',\r\n        'format',\r\n        'frequencies',\r\n        'future',\r\n        'future-call',\r\n        'future-cancel',\r\n        'future-cancelled?',\r\n        'future-done?',\r\n        'future?',\r\n        'gen-class',\r\n        'gen-interface',\r\n        'gensym',\r\n        'get',\r\n        'get-in',\r\n        'get-method',\r\n        'get-proxy-class',\r\n        'get-thread-bindings',\r\n        'get-validator',\r\n        'group-by',\r\n        'halt-when',\r\n        'hash',\r\n        'hash-combine',\r\n        'hash-map',\r\n        'hash-ordered-coll',\r\n        'hash-set',\r\n        'hash-unordered-coll',\r\n        'ident?',\r\n        'identical?',\r\n        'identity',\r\n        'if-let',\r\n        'if-not',\r\n        'if-some',\r\n        'ifn?',\r\n        'import',\r\n        'in-ns',\r\n        'inc',\r\n        \"inc'\",\r\n        'indexed?',\r\n        'init-proxy',\r\n        'inst-ms',\r\n        'inst-ms*',\r\n        'inst?',\r\n        'instance?',\r\n        'int',\r\n        'int-array',\r\n        'int?',\r\n        'integer?',\r\n        'interleave',\r\n        'intern',\r\n        'interpose',\r\n        'into',\r\n        'into-array',\r\n        'ints',\r\n        'io!',\r\n        'isa?',\r\n        'iterate',\r\n        'iterator-seq',\r\n        'juxt',\r\n        'keep',\r\n        'keep-indexed',\r\n        'key',\r\n        'keys',\r\n        'keyword',\r\n        'keyword?',\r\n        'last',\r\n        'lazy-cat',\r\n        'lazy-seq',\r\n        'let',\r\n        'letfn',\r\n        'line-seq',\r\n        'list',\r\n        'list*',\r\n        'list?',\r\n        'load',\r\n        'load-file',\r\n        'load-reader',\r\n        'load-string',\r\n        'loaded-libs',\r\n        'locking',\r\n        'long',\r\n        'long-array',\r\n        'longs',\r\n        'loop',\r\n        'macroexpand',\r\n        'macroexpand-1',\r\n        'make-array',\r\n        'make-hierarchy',\r\n        'map',\r\n        'map-entry?',\r\n        'map-indexed',\r\n        'map?',\r\n        'mapcat',\r\n        'mapv',\r\n        'max',\r\n        'max-key',\r\n        'memfn',\r\n        'memoize',\r\n        'merge',\r\n        'merge-with',\r\n        'meta',\r\n        'method-sig',\r\n        'methods',\r\n        'min',\r\n        'min-key',\r\n        'mix-collection-hash',\r\n        'mod',\r\n        'munge',\r\n        'name',\r\n        'namespace',\r\n        'namespace-munge',\r\n        'nat-int?',\r\n        'neg-int?',\r\n        'neg?',\r\n        'newline',\r\n        'next',\r\n        'nfirst',\r\n        'nil?',\r\n        'nnext',\r\n        'not',\r\n        'not-any?',\r\n        'not-empty',\r\n        'not-every?',\r\n        'not=',\r\n        'ns',\r\n        'ns-aliases',\r\n        'ns-imports',\r\n        'ns-interns',\r\n        'ns-map',\r\n        'ns-name',\r\n        'ns-publics',\r\n        'ns-refers',\r\n        'ns-resolve',\r\n        'ns-unalias',\r\n        'ns-unmap',\r\n        'nth',\r\n        'nthnext',\r\n        'nthrest',\r\n        'num',\r\n        'number?',\r\n        'numerator',\r\n        'object-array',\r\n        'odd?',\r\n        'or',\r\n        'parents',\r\n        'partial',\r\n        'partition',\r\n        'partition-all',\r\n        'partition-by',\r\n        'pcalls',\r\n        'peek',\r\n        'persistent!',\r\n        'pmap',\r\n        'pop',\r\n        'pop!',\r\n        'pop-thread-bindings',\r\n        'pos-int?',\r\n        'pos?',\r\n        'pr',\r\n        'pr-str',\r\n        'prefer-method',\r\n        'prefers',\r\n        'primitives-classnames',\r\n        'print',\r\n        'print-ctor',\r\n        'print-dup',\r\n        'print-method',\r\n        'print-simple',\r\n        'print-str',\r\n        'printf',\r\n        'println',\r\n        'println-str',\r\n        'prn',\r\n        'prn-str',\r\n        'promise',\r\n        'proxy',\r\n        'proxy-call-with-super',\r\n        'proxy-mappings',\r\n        'proxy-name',\r\n        'proxy-super',\r\n        'push-thread-bindings',\r\n        'pvalues',\r\n        'qualified-ident?',\r\n        'qualified-keyword?',\r\n        'qualified-symbol?',\r\n        'quot',\r\n        'rand',\r\n        'rand-int',\r\n        'rand-nth',\r\n        'random-sample',\r\n        'range',\r\n        'ratio?',\r\n        'rational?',\r\n        'rationalize',\r\n        're-find',\r\n        're-groups',\r\n        're-matcher',\r\n        're-matches',\r\n        're-pattern',\r\n        're-seq',\r\n        'read',\r\n        'read-line',\r\n        'read-string',\r\n        'reader-conditional',\r\n        'reader-conditional?',\r\n        'realized?',\r\n        'record?',\r\n        'reduce',\r\n        'reduce-kv',\r\n        'reduced',\r\n        'reduced?',\r\n        'reductions',\r\n        'ref',\r\n        'ref-history-count',\r\n        'ref-max-history',\r\n        'ref-min-history',\r\n        'ref-set',\r\n        'refer',\r\n        'refer-clojure',\r\n        'reify',\r\n        'release-pending-sends',\r\n        'rem',\r\n        'remove',\r\n        'remove-all-methods',\r\n        'remove-method',\r\n        'remove-ns',\r\n        'remove-watch',\r\n        'repeat',\r\n        'repeatedly',\r\n        'replace',\r\n        'replicate',\r\n        'require',\r\n        'reset!',\r\n        'reset-meta!',\r\n        'reset-vals!',\r\n        'resolve',\r\n        'rest',\r\n        'restart-agent',\r\n        'resultset-seq',\r\n        'reverse',\r\n        'reversible?',\r\n        'rseq',\r\n        'rsubseq',\r\n        'run!',\r\n        'satisfies?',\r\n        'second',\r\n        'select-keys',\r\n        'send',\r\n        'send-off',\r\n        'send-via',\r\n        'seq',\r\n        'seq?',\r\n        'seqable?',\r\n        'seque',\r\n        'sequence',\r\n        'sequential?',\r\n        'set',\r\n        'set-agent-send-executor!',\r\n        'set-agent-send-off-executor!',\r\n        'set-error-handler!',\r\n        'set-error-mode!',\r\n        'set-validator!',\r\n        'set?',\r\n        'short',\r\n        'short-array',\r\n        'shorts',\r\n        'shuffle',\r\n        'shutdown-agents',\r\n        'simple-ident?',\r\n        'simple-keyword?',\r\n        'simple-symbol?',\r\n        'slurp',\r\n        'some',\r\n        'some->',\r\n        'some->>',\r\n        'some-fn',\r\n        'some?',\r\n        'sort',\r\n        'sort-by',\r\n        'sorted-map',\r\n        'sorted-map-by',\r\n        'sorted-set',\r\n        'sorted-set-by',\r\n        'sorted?',\r\n        'special-symbol?',\r\n        'spit',\r\n        'split-at',\r\n        'split-with',\r\n        'str',\r\n        'string?',\r\n        'struct',\r\n        'struct-map',\r\n        'subs',\r\n        'subseq',\r\n        'subvec',\r\n        'supers',\r\n        'swap!',\r\n        'swap-vals!',\r\n        'symbol',\r\n        'symbol?',\r\n        'sync',\r\n        'tagged-literal',\r\n        'tagged-literal?',\r\n        'take',\r\n        'take-last',\r\n        'take-nth',\r\n        'take-while',\r\n        'test',\r\n        'the-ns',\r\n        'thread-bound?',\r\n        'time',\r\n        'to-array',\r\n        'to-array-2d',\r\n        'trampoline',\r\n        'transduce',\r\n        'transient',\r\n        'tree-seq',\r\n        'true?',\r\n        'type',\r\n        'unchecked-add',\r\n        'unchecked-add-int',\r\n        'unchecked-byte',\r\n        'unchecked-char',\r\n        'unchecked-dec',\r\n        'unchecked-dec-int',\r\n        'unchecked-divide-int',\r\n        'unchecked-double',\r\n        'unchecked-float',\r\n        'unchecked-inc',\r\n        'unchecked-inc-int',\r\n        'unchecked-int',\r\n        'unchecked-long',\r\n        'unchecked-multiply',\r\n        'unchecked-multiply-int',\r\n        'unchecked-negate',\r\n        'unchecked-negate-int',\r\n        'unchecked-remainder-int',\r\n        'unchecked-short',\r\n        'unchecked-subtract',\r\n        'unchecked-subtract-int',\r\n        'underive',\r\n        'unquote',\r\n        'unquote-splicing',\r\n        'unreduced',\r\n        'unsigned-bit-shift-right',\r\n        'update',\r\n        'update-in',\r\n        'update-proxy',\r\n        'uri?',\r\n        'use',\r\n        'uuid?',\r\n        'val',\r\n        'vals',\r\n        'var-get',\r\n        'var-set',\r\n        'var?',\r\n        'vary-meta',\r\n        'vec',\r\n        'vector',\r\n        'vector-of',\r\n        'vector?',\r\n        'volatile!',\r\n        'volatile?',\r\n        'vreset!',\r\n        'vswap!',\r\n        'when',\r\n        'when-first',\r\n        'when-let',\r\n        'when-not',\r\n        'when-some',\r\n        'while',\r\n        'with-bindings',\r\n        'with-bindings*',\r\n        'with-in-str',\r\n        'with-loading-context',\r\n        'with-local-vars',\r\n        'with-meta',\r\n        'with-open',\r\n        'with-out-str',\r\n        'with-precision',\r\n        'with-redefs',\r\n        'with-redefs-fn',\r\n        'xml-seq',\r\n        'zero?',\r\n        'zipmap'\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            // whitespaces and comments\r\n            { include: '@whitespace' },\r\n            // numbers\r\n            [/@numbers/, 'number'],\r\n            // characters\r\n            [/@characters/, 'string'],\r\n            // strings\r\n            { include: '@string' },\r\n            // brackets\r\n            [/[()\\[\\]{}]/, '@brackets'],\r\n            // regular expressions\r\n            [/\\/#\"(?:\\.|(?:\")|[^\"\\n])*\"\\/g/, 'regexp'],\r\n            // reader macro characters\r\n            [/[#'@^`~]/, 'meta'],\r\n            // symbols\r\n            [\r\n                /@qualifiedSymbols/,\r\n                {\r\n                    cases: {\r\n                        '^:.+$': 'constant',\r\n                        '@specialForms': 'keyword',\r\n                        '@coreSymbols': 'keyword',\r\n                        '@constants': 'constant',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        whitespace: [\r\n            [/[\\s,]+/, 'white'],\r\n            [/;.*$/, 'comment'],\r\n            [/\\(comment\\b/, 'comment', '@comment']\r\n        ],\r\n        comment: [\r\n            [/\\(/, 'comment', '@push'],\r\n            [/\\)/, 'comment', '@pop'],\r\n            [/[^()]/, 'comment']\r\n        ],\r\n        string: [[/\"/, 'string', '@multiLineString']],\r\n        multiLineString: [\r\n            [/\"/, 'string', '@popall'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/./, 'string']\r\n        ]\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.js?");

/***/ })

}]);