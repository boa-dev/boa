window.SIDEBAR_ITEMS = {"enum":[["ArgAction","Behavior of arguments when they are encountered while parsing"],["ColorChoice","Represents the color preferences for program output"],["ValueHint","Provide shell with hint on how to complete an argument."]],"macro":[["arg","Create an `Arg` from a usage string."],["command","Requires `cargo` feature flag to be enabled."],["value_parser","Select a [`ValueParser`] implementation from the intended type"]],"mod":[["builder","Define [`Command`] line [arguments][`Arg`]"],["error","Error reporting"],["parser","[`Command`][crate::Command] line argument parser"]],"struct":[["Arg","The abstract representation of a command line argument. Used to set all the options and relationships that define a valid argument for the program."],["ArgGroup","Family of related arguments."],["ArgMatches","Container for parse results."],["Command","Build a command-line interface."],["Id","[`Arg`][crate::Arg] or [`ArgGroup`][crate::ArgGroup] identifier"]],"trait":[["Args","Parse a set of arguments into a user-defined container."],["CommandFactory","Create a [`Command`] relevant for a user-defined container."],["FromArgMatches","Converts an instance of [`ArgMatches`] to a user-defined container."],["Parser","Parse command-line arguments into `Self`."],["Subcommand","Parse a sub-command into a user-defined enum."],["ValueEnum","Parse arguments into enums."]],"type":[["Error","Command Line Argument Parser Error"]]};