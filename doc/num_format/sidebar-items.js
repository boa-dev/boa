window.SIDEBAR_ITEMS = {"enum":[["ErrorKind","This crate’s error kind."],["Grouping","Type for specifying how digits are grouped together (e.g. 1,000,000 vs. 10,00,000 vs. 1000000)."],["Locale","A key type. Represents formats from the Unicode Consortium’s Common Locale Data Repository (CLDR). Implements `Format`."]],"mod":[["utils","Utility types needed if you want to implement `Format` on your own type."]],"struct":[["Buffer","A key type. Represents a stack-allocated buffer you can use to get a formatted `&str` without heap allocation."],["CustomFormat","Type for representing your own custom formats. Implements `Format`."],["CustomFormatBuilder","Type for building `CustomFormat`s."],["Error","This crate’s error type."]],"trait":[["Format","Trait that abstracts over `CustomFormat`, `Locale`, and `SystemLocale`."],["ToFormattedStr","Marker trait for number types that can be formatted without heap allocation (see `Buffer`)."],["ToFormattedString","A key trait. Gives numbers the `to_formatted_string` method."],["WriteFormatted","A key trait. Gives types in the standard library that implement `io::Write` or `fmt::Write`, such as `&mut [u8]` and `&mut String`, a `write_formatted` method for writing formatted numbers."]]};