window.SIDEBAR_ITEMS = {"enum":[["ErrorHandler","The type of error handler in a [`Try`] statement."],["LabelledItem","The set of Parse Nodes that can be preceded by a label, as defined by the spec."],["Statement","The `Statement` Parse Node."]],"mod":[["block","Block AST node."],["if","If statement"],["iteration","Iteration nodes"],["labelled",""],["return",""],["switch","Switch node."],["throw",""],["try","Error handling statements"]],"struct":[["Block","A `block` statement (or compound statement in other languages) is used to group zero or more statements."],["Break","The `break` statement terminates the current loop, switch, or label statement and transfers program control to the statement following the terminated statement."],["Case","A case clause inside a [`Switch`] statement, as defined by the spec."],["Catch","Catch block."],["Continue","The `continue` statement terminates execution of the statements in the current iteration of the current or labeled loop, and continues execution of the loop with the next iteration."],["DoWhileLoop","The `do...while` statement creates a loop that executes a specified statement until the test condition evaluates to false."],["Finally","Finally block."],["ForInLoop","A `for...in` loop statement, as defined by the spec."],["ForLoop","The `for` statement creates a loop that consists of three optional expressions."],["ForOfLoop","A `for...of` loop statement, as defined by the spec."],["If","The `if` statement executes a statement if a specified condition is `truthy`. If the condition is `falsy`, another statement can be executed."],["Labelled","Labelled statement nodes, as defined by the spec."],["Return","The `return` statement ends function execution and specifies a value to be returned to the function caller."],["Switch","The `switch` statement evaluates an expression, matching the expressionâ€™s value to a case clause, and executes statements associated with that case, as well as statements in cases that follow the matching case."],["Throw","The `throw` statement throws a user-defined exception."],["Try","The `try...catch` statement marks a block of statements to try and specifies a response should an exception be thrown."],["WhileLoop","The `while` statement creates a loop that executes a specified statement as long as the test condition evaluates to `true`."]]};