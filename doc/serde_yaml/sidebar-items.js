window.SIDEBAR_ITEMS = {"enum":[["Value","Represents any valid YAML value."]],"fn":[["from_reader","Deserialize an instance of type `T` from an IO stream of YAML."],["from_slice","Deserialize an instance of type `T` from bytes of YAML text."],["from_str","Deserialize an instance of type `T` from a string of YAML text."],["from_value","Interpret a `serde_yaml::Value` as an instance of type `T`."],["to_string","Serialize the given data structure as a String of YAML."],["to_value","Convert a `T` into `serde_yaml::Value` which is an enum that can represent any valid YAML data."],["to_writer","Serialize the given data structure as YAML into the IO stream."]],"mod":[["mapping","A YAML mapping and its iterator types."],["value","The Value enum, a loosely typed way of representing any valid YAML value."],["with","Customizations to use with Serde’s `#[serde(with = …)]` attribute."]],"struct":[["Deserializer","A structure that deserializes YAML into Rust values."],["Error","An error that happened serializing or deserializing YAML data."],["Location","The input location that an error occured."],["Mapping","A YAML mapping in which the keys and values are both `serde_yaml::Value`."],["Number","Represents a YAML number, whether integer or floating point."],["Serializer","A structure for serializing Rust values into YAML."]],"trait":[["Index","A type that can be used to index into a `serde_yaml::Value`. See the `get` and `get_mut` methods of `Value`."]],"type":[["Result","Alias for a `Result` with the error type `serde_yaml::Error`."],["Sequence","A YAML sequence in which the elements are `serde_yaml::Value`."]]};