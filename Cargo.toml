[workspace]
resolver = "2"
members = [
    # CORE
    "core/*",
    # FFI
    "ffi/*",
    # TESTS
    "tests/*",
    # TOOLS
    "tools/*",
    # OTHERS
    "examples",
    "cli",
    # UTILS
    "utils/*",
]

exclude = [
    "tests/fuzz", # Does weird things on Windows tests
    "tests/src",  # Just a hack to have fuzz inside tests
    "tests/wpt",  # Should not run WPT by default.
]

[workspace.package]
edition = "2024"
version = "0.20.0"
rust-version = "1.88.0"
authors = ["boa-dev"]
repository = "https://github.com/boa-dev/boa"
license = "Unlicense OR MIT"
description = "Boa is a Javascript lexer, parser and compiler written in Rust. Currently, it has support for some of the language."

[workspace.dependencies]

# Repo Crates
boa_ast = { version = "~0.20.0", path = "core/ast" }
boa_engine = { version = "~0.20.0", path = "core/engine" }
boa_gc = { version = "~0.20.0", path = "core/gc" }
boa_icu_provider = { version = "~0.20.0", path = "core/icu_provider" }
boa_interner = { version = "~0.20.0", path = "core/interner" }
boa_interop = { version = "~0.20.0", path = "core/interop" }
boa_macros = { version = "~0.20.0", path = "core/macros" }
boa_parser = { version = "~0.20.0", path = "core/parser" }
boa_runtime = { version = "~0.20.0", path = "core/runtime" }
boa_string = { version = "~0.20.0", path = "core/string" }

# Utility Repo Crates
tag_ptr = { path = "utils/tag_ptr" }
small_btree = { path = "utils/small_btree" }

# Shared deps
arbitrary = "1"
bitflags = "2.9.3"
clap = "4.5.43"
colored = "3.0.0"
cow-utils = "0.1.3"
fast-float2 = "0.2.3"
hashbrown = "0.15.5"
http = { version = "1.3.1" }
indexmap = { version = "2.11.0", default-features = false }
indoc = "2.0.6"
itoa = "1.0.15"
jemallocator = "0.5.4"
mimalloc-safe = "0.1.54"
lz4_flex = "0.11.5"
num-bigint = "0.4.6"
num-traits = "0.2.19"
once_cell = { version = "1.21.3", default-features = false }
phf = { version = "0.12.1", default-features = false }
pollster = "0.4.0"
regex = "1.11.2"
regress = { version = "0.10.4", features = ["utf16"] }
reqwest = { version = "0.12.20" }
rustc-hash = { version = "2.1.1", default-features = false }
serde_json = "1.0.142"
serde = "1.0.219"
static_assertions = "1.1.0"
textwrap = "0.16.2"
thin-vec = "0.2.14"
time = { version = "0.3.41", default-features = false, features = [
    "local-offset",
    "large-dates",
    "wasm-bindgen",
    "parsing",
    "formatting",
    "macros",
] }
log = "0.4.27"
simple_logger = "5.0.0"
cargo_metadata = "0.19.2"
trybuild = "1.0.110"
rayon = "1.10.0"
toml = "0.9.5"
color-eyre = "0.6.3"
comfy-table = "7.1.4"
serde_repr = "0.1.20"
bus = "2.4.1"
wasm-bindgen = { version = "0.2.97", default-features = false }
getrandom = { version = "0.3.3", default-features = false }
console_error_panic_hook = "0.1.7"
wasm-bindgen-test = "0.3.47"
smol = "2.0.2"
isahc = "1.7.2"
rustyline = { version = "15.0.0", default-features = false }
dhat = "0.3.3"
quote = "1.0.40"
syn = { version = "2.0.104", default-features = false }
proc-macro2 = "1.0"
synstructure = "0.13"
measureme = "12.0.3"
paste = "1.0"
rand = "0.9.2"
num-integer = "0.1.46"
ryu-js = "1.0.2"
tap = "1.0.1"
thiserror = { version = "2.0.12", default-features = false }
dashmap = "6.1.0"
num_enum = "0.7.4"
itertools = { version = "0.14.0", default-features = false }
portable-atomic = "1.11.0"
bytemuck = { version = "1.23.2", default-features = false }
arrayvec = "0.7.6"
intrusive-collections = "0.9.7"
cfg-if = "1.0.1"
either = "1.15.0"
sys-locale = "0.3.2"
temporal_rs = { version = "0.0.14", default-features = false, features = [
    "tzdb",
] }
web-time = "1.1.0"
criterion = "0.5.1"
float-cmp = "0.10.0"
futures-lite = "2.6.1"
test-case = "3.3.1"
rstest = "0.25.0"
url = "2.5.7"
tokio = { version = "1.47.1", default-features = false }
futures-concurrency = "7.6.3"
dynify = "0.1.0"


# ICU4X

icu_provider = { version = "~2.0.0", default-features = false }
icu_locale = { version = "~2.0.0", default-features = false }
icu_locale_core = { version = "~2.0.0", default-features = false }
icu_datetime = { version = "~2.0.0", default-features = false }
icu_calendar = { version = "~2.0.0", default-features = false }
icu_collator = { version = "~2.0.0", default-features = false }
icu_plurals = { version = "~2.0.0", default-features = false }
icu_list = { version = "~2.0.0", default-features = false }
icu_casemap = { version = "~2.0.0", default-features = false }
icu_segmenter = { version = "~2.0.0", default-features = false }
icu_provider_export = { version = "~2.0.0", default-features = false }
icu_provider_source = { version = "~2.0.1", default-features = false }
icu_provider_adapters = { version = "~2.0.0", default-features = false }
icu_provider_blob = { version = "~2.0.0", default-features = false }
icu_properties = { version = "~2.0.0", default-features = true }
icu_normalizer = { version = "~2.0.0", default-features = false }
icu_decimal = { version = "~2.0.0", default-features = false }
writeable = "~0.6.1"
tinystr = "~0.8.1"
yoke = "0.8.0"
zerofrom = "~0.1.6"
fixed_decimal = "0.7.0"

[workspace.metadata.workspaces]
allow_branch = "main"

# The ci profile, designed to reduce size of target directory
[profile.ci]
inherits = "dev"
debug = false
incremental = false

# The release profile, used for `cargo build --release`.
[profile.release]
# Enables "fat" LTO, for faster release builds
lto = "fat"
# Makes sure that all code is compiled together, for LTO
codegen-units = 1
# Strips debug information and symbols from the binary, reducing its size
strip = "symbols"

[profile.release-dbg]
inherits = "release"
debug = true
strip = "none"

# The test profile, used for `cargo test`.
[profile.test]
# Enables thin local LTO and some optimizations.
opt-level = 1

# The benchmark profile, used for `cargo bench`.
[profile.bench]
# Enables "fat" LTO, for faster benchmark builds
lto = "fat"
# Makes sure that all code is compiled together, for LTO
codegen-units = 1

[workspace.lints.rust]
# rustc lint groups https://doc.rust-lang.org/rustc/lints/groups.html
warnings = "warn"
future_incompatible = { level = "warn", priority = -1 }
let_underscore = { level = "warn", priority = -1 }
nonstandard_style = { level = "warn", priority = -1 }
rust_2018_compatibility = { level = "warn", priority = -1 }
rust_2018_idioms = { level = "warn", priority = -1 }
rust_2021_compatibility = { level = "warn", priority = -1 }
unused = { level = "warn", priority = -1 }

# rustc allowed-by-default lints https://doc.rust-lang.org/rustc/lints/listing/allowed-by-default.html
missing_docs = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_abi = "warn"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
non_ascii_idents = "warn"
noop_method_call = "warn"
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unreachable_pub = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_crate_dependencies = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
variant_size_differences = "warn"

[workspace.lints.rustdoc]
# rustdoc lints https://doc.rust-lang.org/rustdoc/lints.html
broken_intra_doc_links = "warn"
private_intra_doc_links = "warn"
missing_crate_level_docs = "warn"
private_doc_tests = "warn"
invalid_codeblock_attributes = "warn"
invalid_rust_codeblocks = "warn"
bare_urls = "warn"

[workspace.lints.clippy]
# clippy allowed by default
dbg_macro = "warn"
print_stdout = "warn"
print_stderr = "warn"

# clippy categories https://doc.rust-lang.org/clippy/
all = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
